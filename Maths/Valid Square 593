class Solution {
    public boolean validSquare(int[] p1, int[] p2, int[] p3, int[] p4) {
        Set<Integer> set = new HashSet<>();
        set.add(distanceSquared(p1, p2));
        set.add(distanceSquared(p1, p3));
        set.add(distanceSquared(p1, p4));
        set.add(distanceSquared(p2, p3));
        set.add(distanceSquared(p2, p4));
        set.add(distanceSquared(p3, p4));

        // A valid square must have exactly 2 unique distances: side and diagonal
        return !set.contains(0) && set.size() == 2;
    }

    private int distanceSquared(int[] a, int[] b) {
        int dx = a[0] - b[0];
        int dy = a[1] - b[1];
        return dx * dx + dy * dy;
    }
}
